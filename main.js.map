{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/utils/constants.js","webpack://mesto-project-ff/./src/utils/utils.js","webpack://mesto-project-ff/./src/api.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n// Общие селекторы\r\nexport const popups = document.querySelectorAll('.popup');\r\nexport const cardsList = document.querySelector('.places__list');\r\n\r\n// Редактирование профиля\r\nexport const editButton = document.querySelector('.profile__edit-button');\r\nexport const profileFormWrap = document.querySelector('.popup_type_edit');\r\nexport const profileTitle = document.querySelector('.profile__title');\r\nexport const profileDescription = document.querySelector('.profile__description');\r\nexport const profileImage = document.querySelector('.profile__image');\r\nexport const profileForm = document.forms['edit-profile'];\r\nexport const nameInput = profileForm.querySelector('.popup__input_type_name');\r\nexport const jobInput = profileForm.querySelector('.popup__input_type_description');\r\nexport const avatarForm = document.forms['update-avatar'];\r\nexport const avatarInput = avatarForm.querySelector('.popup__input_type_avatar');\r\nexport const updateAvatarPopupWrapper = document.querySelector('.popup_type_update-avatar');\r\n\r\n// Добавление карточки\r\nexport const addCardButton = document.querySelector('.profile__add-button');\r\nexport const cardFormWrap = document.querySelector('.popup_type_new-card');\r\nexport const cardForm = document.forms['new-place'];\r\nexport const cardNameInput = cardForm.querySelector('.popup__input_type_card-name');\r\nexport const cardUrlInput = cardForm.querySelector('.popup__input_type_url');\r\n\r\n// Открытие попапа с картинкой\r\nexport const fullCardPopup = document.querySelector('.popup_type_image');\r\nexport const fullCardImage = fullCardPopup.querySelector('.popup__image');\r\nexport const fullCardCaption = fullCardPopup.querySelector('.popup__caption');\r\n\r\n// Удаление карточки\r\nexport const confirmDeletePopup = document.querySelector('.popup_type_confirm-delete');\r\nexport const confirmDeleteButton = confirmDeletePopup.querySelector('.popup__button_confirm-delete');\r\n","export function renderLoading(isLoading, buttonElement, initialText='Сохранить', loadingText='Сохранение...') {\r\n  if (isLoading) {\r\n    buttonElement.textContent = loadingText;\r\n  } else {\r\n    buttonElement.textContent = initialText;\r\n  }\r\n}\r\n\r\n// Универсальная функция, которая принимает функцию запроса, объект события и текст во время загрузки\r\nexport function handleSubmit(request, evt, loadingText = 'Сохранение...') {\r\n  evt.preventDefault();\r\n  // универсально получаем кнопку сабмита из `evt`\r\n  const submitButton = evt.submitter;\r\n  // записываем начальный текст кнопки до вызова запроса\r\n  const initialText = submitButton.textContent;\r\n  // изменяем текст кнопки до вызова запроса\r\n  renderLoading(true, submitButton, initialText, loadingText);\r\n  request()\r\n    .then(() => {\r\n      evt.target.reset()\r\n    })\r\n    .catch(console.error)\r\n    .finally(() => {\r\n      renderLoading(false, submitButton, initialText)\r\n    });\r\n}\r\n","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-10',\r\n  headers: {\r\n    authorization: '43bd1d02-664a-40fa-ac3e-dfdef7bf9773',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nconst handleRequest = (res) => {\r\n  if(res.ok) {\r\n    return res.json()\r\n  }\r\n  return Promise.reject(`Error: ${res.status}`);\r\n}\r\n\r\nfunction request(endpoint, options) {\r\n  return fetch(`${config.baseUrl}${endpoint}`, options).then(handleRequest);\r\n}\r\n\r\nexport const getProfileInfo = () => {\r\n  return request(`/users/me`, {\r\n    headers: config.headers\r\n  });\r\n}\r\n\r\nexport const updateProfileInfo = (name, about) => {\r\n  return request(`/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about\r\n    })\r\n  })\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n  return request(`/cards`, {\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\nexport const addNewCard = (name, link) => {\r\n  return request(`/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      link: link\r\n    })\r\n  })\r\n}\r\n\r\nexport const addLike = (cardId) => {\r\n  return request(`/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\nexport const deleteLike = (cardId) => {\r\n  return request(`/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\nexport const removeCard = (cardId) => {\r\n  return request(`/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\nexport const updateAvatar = (avatar) => {\r\n  return request(`/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar\r\n    })\r\n  })\r\n}\r\n","export function openPopup(popup) {\r\n\tpopup.classList.add('popup_is-opened');\r\n\tdocument.addEventListener('keydown', keyHandler);\r\n}\r\n\r\nexport function closePopup(popup) {\r\n\tpopup.classList.remove('popup_is-opened');\r\n\tdocument.removeEventListener('keydown', keyHandler);\r\n}\r\n\r\nfunction keyHandler(evt) {\r\n\tif (evt.key === 'Escape') {\r\n\t\tclosePopup(document.querySelector('.popup_is-opened'));\r\n\t}\r\n}\r\n","import { addLike, deleteLike, removeCard } from '../api';\r\nimport { closePopup, openPopup } from \"./modal\";\r\nimport { confirmDeleteButton, confirmDeletePopup } from '../utils/constants';\r\n\r\nlet currentCardToDelete = null;\r\n\r\nexport function createCard(cardParameters) {\r\n\tconst { cardData, userId, onLike, onDelete, openFullCardPopup } = cardParameters;\r\n\r\n\tconst cardTemplate = document.querySelector('#card-template').content;\r\n\tconst cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n\tconst deleteButton = cardElement.querySelector('.card__delete-button');\r\n\tconst cardImage = cardElement.querySelector('.card__image');\r\n\tconst likeButton = cardElement.querySelector('.card__like-button');\r\n\tconst likeCount = cardElement.querySelector('.card__like-count');\r\n\r\n\tcardElement.querySelector('.card__title').textContent = cardData.name;\r\n\tcardImage.src = cardData.link;\r\n\tcardImage.alt = cardData.name;\r\n\tlikeCount.textContent = cardData.likes.length;\r\n\r\n\tif(userId === cardData.owner._id) {\r\n\t\tdeleteButton.classList.add('card__delete-button_visible')\r\n\t\tdeleteButton.addEventListener('click', () => {\r\n\t\t\tonDelete(cardData._id, cardElement)\r\n\t\t})\r\n\t} else {\r\n\t\tdeleteButton.remove();\r\n\t}\r\n\r\n\tlikeButton.addEventListener('click', () => {\r\n\t\tonLike(cardData._id, likeButton, likeCount);\r\n\t});\r\n\r\n\tisLiked(cardData, likeButton, userId);\r\n\r\n\tcardImage.addEventListener('click', () => {\r\n\t\topenFullCardPopup(cardData.name, cardData.link);\r\n\t});\r\n\r\n\treturn cardElement;\r\n}\r\n\r\nconfirmDeleteButton.addEventListener('click', () => {\r\n\tif (currentCardToDelete) {\r\n\t\tremoveCard(currentCardToDelete.cardId)\r\n\t\t\t.then(() => {\r\n\t\t\t\t// Удаление элемента карточки из DOM\r\n\t\t\t\tcurrentCardToDelete.cardElement.remove();\r\n\t\t\t\t// Сброс текущей карточки\r\n\t\t\t\tcurrentCardToDelete = null;\r\n\t\t\t\tclosePopup(confirmDeletePopup);\r\n\t\t\t})\r\n\t\t\t.catch(console.error)\r\n\t}\r\n});\r\n\r\nexport function onDelete(cardId, cardElement) {\r\n\tcurrentCardToDelete = {cardId, cardElement};\r\n\topenPopup(confirmDeletePopup);\r\n}\r\n\r\nexport function onLike(cardId, buttonElement, likeCount) {\r\n\tif (buttonElement.classList.contains('card__like-button_is-active')) {\r\n\t\tdeleteLike(cardId)\r\n\t\t\t.then((card) => {\r\n\t\t\t\tbuttonElement.classList.remove('card__like-button_is-active');\r\n\t\t\t\tlikeCount.textContent = card.likes.length;\r\n\t\t\t})\r\n\t\t\t.catch(console.error)\r\n\t} else {\r\n\t\taddLike(cardId)\r\n\t\t\t.then((card) => {\r\n\t\t\t\tbuttonElement.classList.add('card__like-button_is-active');\r\n\t\t\t\tlikeCount.textContent = card.likes.length;\r\n\t\t\t})\r\n\t\t\t.catch(console.error)\r\n\t}\r\n}\r\n\r\nfunction isLiked(cardElement, buttonElement, userId) {\r\n\tif (cardElement.likes.some((user) => user._id === userId)) {\r\n\t\tbuttonElement.classList.add('card__like-button_is-active');\r\n\t}\r\n}\r\n","function showInputError(formElement, inputElement, errorMessage, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n  errorElement.textContent = errorMessage;\r\n}\r\n\r\nfunction hideInputError(formElement, inputElement, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n}\r\n\r\nfunction isValid(formElement, inputElement, validationConfig) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    // данные атрибута доступны у элемента инпута через ключевое слово dataset.\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n}\r\n\r\nfunction setEventListeners(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  // Деактивируем кнопку при загрузке\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function() {\r\n      isValid(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n\r\n  // Добавляем обработчик события reset\r\n  formElement.addEventListener('reset', () => {\r\n    disableButton(buttonElement, validationConfig);\r\n  });\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n}\r\n\r\nfunction disableButton(buttonElement, validationConfig) {\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n  if (hasInvalidInput(inputList)) {\r\n    disableButton(buttonElement, validationConfig);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\nexport function enableValidation(validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n    // Начальное деактивирование кнопки при загрузке\r\n    disableButton(buttonElement, validationConfig);\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n}\r\n\r\nexport function clearValidation(formElements, validationConfig) {\r\n  formElements.forEach((formElement) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputList.forEach((inputElement) => {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig)\r\n    });\r\n  });\r\n}\r\n","import './pages/index.css';\r\nimport * as data from './utils/constants';\r\nimport { handleSubmit } from './utils/utils';\r\nimport { createCard, onDelete, onLike } from './components/card';\r\nimport { openPopup, closePopup } from './components/modal';\r\nimport { clearValidation, enableValidation } from './components/validation'\r\nimport { addNewCard, getInitialCards, getProfileInfo, updateAvatar, updateProfileInfo } from './api';\r\n\r\nlet userId = null;\r\n\r\n// Добавление карточки на страницу\r\nfunction addCard(cardData, method = 'append') {\r\n\r\n\t// создаем карточку, передавая обработчики в виде объекта `callbacks`\r\n\tconst cardElement = createCard({\r\n\t\tcardData,\r\n\t\tuserId,\r\n\t\tonLike,\r\n\t\tonDelete,\r\n\t\topenFullCardPopup\r\n\t});\r\n\r\n\t// вставляем карточку, используя метод (вставится `prepend` или `append`)\r\n\tdata.cardsList[ method ](cardElement);\r\n}\r\n\r\nPromise.all([getInitialCards(), getProfileInfo()])\r\n\t.then(([cards, profileInfo]) => {\r\n\t\t// Инициализация данных\r\n\t\tdata.profileTitle.textContent = profileInfo.name;\r\n\t\tdata.profileDescription.textContent = profileInfo.about;\r\n\t\tdata.profileImage.style.backgroundImage = `url(${profileInfo.avatar})`;\r\n\t\tuserId = profileInfo._id;\r\n\r\n\t\tcards.forEach((card) => {\r\n\t\t\taddCard(card);\r\n\t\t});\r\n\t})\r\n\t.catch(console.error)\r\n\r\n// Открытие карточки\r\nfunction openFullCardPopup(name, link) {\r\n\tdata.fullCardImage.src = link;\r\n\tdata.fullCardImage.alt = name;\r\n\tdata.fullCardCaption.textContent = name;\r\n\topenPopup(data.fullCardPopup);\r\n}\r\n\r\n// Кнопка редактирования профиля\r\ndata.editButton.addEventListener('click', () => {\r\n\tclearValidation([data.profileForm], data.validationConfig);\r\n\topenPopup(data.profileFormWrap);\r\n\r\n\tconst currentName = data.profileTitle.textContent;\r\n\tconst currentJob = data.profileDescription.textContent;\r\n\r\n\tdata.nameInput.value = currentName;\r\n\tdata.jobInput.value = currentJob;\r\n});\r\n\r\ndata.profileImage.addEventListener('click', () => {\r\n\tclearValidation([data.avatarForm], data.validationConfig);\r\n\topenPopup(data.updateAvatarPopupWrapper);\r\n});\r\n\r\n// Кнопка добавления карточки\r\ndata.addCardButton.addEventListener('click', () => {\r\n\tclearValidation([data.cardForm], data.validationConfig);\r\n\topenPopup(data.cardFormWrap);\r\n});\r\n\r\n// Закрытие попапов. Находим все попапы и пробегаемся по ним, навешивая обработчик\r\ndata.popups.forEach((popup) => {\r\n\tpopup.addEventListener('mousedown', (evt) => {\r\n\t\tif (evt.target.classList.contains('popup_is-opened') || (evt.target.classList.contains('popup__close'))) {\r\n\t\t\tclosePopup(popup);\r\n\t\t}\r\n\t});\r\n});\r\n\r\n// Форма редактирования профиля\r\nfunction handleProfileFormSubmit(evt) {\r\n\tfunction makeRequest() {\r\n\t\t// Получаем текущие значения\r\n\t\tconst nameValue = data.nameInput.value;\r\n\t\tconst jobValue = data.jobInput.value;\r\n\r\n\t\treturn updateProfileInfo(nameValue, jobValue)\r\n\t\t\t.then(() => {\r\n\t\t\t\t// Устанавливаем текущие значения\r\n\t\t\t\tdata.profileTitle.textContent = nameValue;\r\n\t\t\t\tdata.profileDescription.textContent = jobValue;\r\n\t\t\t\tclosePopup(data.profileFormWrap);\r\n\t\t\t})\r\n\t}\r\n\thandleSubmit(makeRequest, evt)\r\n}\r\ndata.profileForm.addEventListener('submit', handleProfileFormSubmit);\r\n\r\n// Форма добавления карточки на страницу\r\nfunction handleCardFormSubmit(evt) {\r\n\tfunction makeRequest() {\r\n\t\tconst nameValue = data.cardNameInput.value;\r\n\t\tconst urlValue = data.cardUrlInput.value;\r\n\r\n\t\treturn addNewCard(nameValue, urlValue)\r\n\t\t\t.then((cardData) => {\r\n\t\t\t\tconst card = createCard({\r\n\t\t\t\t\tcardData,\r\n\t\t\t\t\tuserId,\r\n\t\t\t\t\tonLike,\r\n\t\t\t\t\tonDelete,\r\n\t\t\t\t\topenFullCardPopup\r\n\t\t\t\t});\r\n\t\t\t\tdata.cardsList.prepend(card);\r\n\t\t\t\tclosePopup(data.cardFormWrap);\r\n\t\t\t})\r\n\t}\r\n\thandleSubmit(makeRequest, evt);\r\n}\r\ndata.cardForm.addEventListener('submit', handleCardFormSubmit);\r\n\r\n// Форма обновления аватара\r\nfunction handleUpdateAvatarFormSubmit(evt) {\r\n\tfunction makeRequest() {\r\n\t\tconst avatarUrl = data.avatarInput.value;\r\n\r\n\t\treturn updateAvatar(avatarUrl)\r\n\t\t\t.then((user) => {\r\n\t\t\t\tdata.profileImage.style.backgroundImage = `url('${user.avatar}')`;\r\n\t\t\t\tclosePopup(data.updateAvatarPopupWrapper);\r\n\t\t\t})\r\n\t}\r\n\r\n\thandleSubmit(makeRequest, evt)\r\n}\r\ndata.avatarForm.addEventListener('submit', handleUpdateAvatarFormSubmit);\r\n\r\nenableValidation(data.validationConfig);\r\n"],"names":["validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","popups","document","querySelectorAll","cardsList","querySelector","editButton","profileFormWrap","profileTitle","profileDescription","profileImage","profileForm","forms","nameInput","jobInput","avatarForm","avatarInput","updateAvatarPopupWrapper","addCardButton","cardFormWrap","cardForm","cardNameInput","cardUrlInput","fullCardPopup","fullCardImage","fullCardCaption","confirmDeletePopup","confirmDeleteButton","renderLoading","isLoading","buttonElement","initialText","arguments","length","undefined","loadingText","textContent","handleSubmit","request","evt","preventDefault","submitButton","submitter","then","target","reset","catch","console","error","finally","config","baseUrl","headers","authorization","handleRequest","res","ok","json","Promise","reject","concat","status","endpoint","options","fetch","openPopup","popup","classList","add","addEventListener","keyHandler","closePopup","remove","removeEventListener","key","currentCardToDelete","createCard","cardParameters","cardData","userId","onLike","onDelete","openFullCardPopup","cardElement","content","cloneNode","deleteButton","cardImage","likeButton","likeCount","name","src","link","alt","likes","owner","_id","some","user","isLiked","cardId","contains","method","deleteLike","card","addLike","hideInputError","formElement","inputElement","errorElement","id","disableButton","disabled","toggleButtonState","inputList","validity","valid","hasInvalidInput","clearValidation","formElements","forEach","Array","from","data","all","_ref","_ref2","cards","profileInfo","about","style","backgroundImage","avatar","addCard","currentName","currentJob","value","nameValue","jobValue","body","JSON","stringify","prepend","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation"],"sourceRoot":""}