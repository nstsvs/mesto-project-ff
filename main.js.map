{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/api.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-10',\r\n  headers: {\r\n    authorization: '43bd1d02-664a-40fa-ac3e-dfdef7bf9773',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nconst handleRequest = (res) => {\r\n  if(res.ok) {\r\n    return res.json()\r\n  }\r\n  return Promise.reject(`Error: ${res.status}`);\r\n}\r\n\r\nexport const getProfileInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n    .then(handleRequest)\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport const updateProfileInfo = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about\r\n    })\r\n  })\r\n    .then(handleRequest)\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n    .then(handleRequest)\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport const addNewCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      link: link\r\n    })\r\n  })\r\n    .then(handleRequest)\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexport const addLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n    .then(handleRequest)\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexport const deleteLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(handleRequest)\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexport const removeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(handleRequest)\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexport const updateAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar\r\n    })\r\n  })\r\n    .then(handleRequest)\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n}\r\n","export function openPopup(popup) {\r\n\tpopup.classList.add('popup_is-opened');\r\n\tdocument.addEventListener('keydown', keyHandler);\r\n}\r\n\r\nexport function closePopup(popup) {\r\n\tpopup.classList.remove('popup_is-opened');\r\n\tdocument.removeEventListener('keydown', keyHandler);\r\n}\r\n\r\nfunction keyHandler(evt) {\r\n\tif (evt.key === 'Escape') {\r\n\t\tclosePopup(document.querySelector('.popup_is-opened'));\r\n\t}\r\n}\r\n","import { addLike, deleteLike, removeCard } from '../api';\r\nimport { closePopup, openPopup } from \"./modal\";\r\n\r\nconst confirmDeletePopup = document.querySelector('.popup_type_confirm-delete');\r\nconst confirmDeleteButton = confirmDeletePopup.querySelector('.popup__button_confirm-delete');\r\nlet currentCardToDelete = null;\r\n\r\nexport function createCard(cardParameters) {\r\n\tconst { cardData, userId, onLike, onDelete, openFullCardPopup } = cardParameters;\r\n\r\n\tconst cardTemplate = document.querySelector('#card-template').content;\r\n\tconst cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n\tconst deleteButton = cardElement.querySelector('.card__delete-button');\r\n\tconst cardImage = cardElement.querySelector('.card__image');\r\n\tconst likeButton = cardElement.querySelector('.card__like-button');\r\n\tconst likeCount = cardElement.querySelector('.card__like-count');\r\n\r\n\tcardElement.querySelector('.card__title').textContent = cardData.name;\r\n\tcardImage.src = cardData.link;\r\n\tcardImage.alt = cardData.name;\r\n\tlikeCount.textContent = cardData.likes.length;\r\n\r\n\tif(userId === cardData.owner._id) {\r\n\t\tdeleteButton.classList.add('card__delete-button_visible')\r\n\t\tdeleteButton.addEventListener('click', () => {\r\n\t\t\tonDelete(cardData._id, cardElement)\r\n\t\t})\r\n\t} else {\r\n\t\tdeleteButton.remove();\r\n\t}\r\n\r\n\tlikeButton.addEventListener('click', () => {\r\n\t\tonLike(cardData._id, likeButton, likeCount);\r\n\t});\r\n\r\n\tisLiked(cardData, likeButton, userId);\r\n\r\n\tcardImage.addEventListener('click', () => {\r\n\t\topenFullCardPopup(cardData.name, cardData.link);\r\n\t});\r\n\r\n\treturn cardElement;\r\n}\r\n\r\nconfirmDeleteButton.addEventListener('click', () => {\r\n\tif (currentCardToDelete) {\r\n\t\tremoveCard(currentCardToDelete.cardId)\r\n\t\t\t.then(() => {\r\n\t\t\t\t// Удаление элемента карточки из DOM\r\n\t\t\t\tcurrentCardToDelete.cardElement.remove();\r\n\t\t\t\t// Сброс текущей карточки\r\n\t\t\t\tcurrentCardToDelete = null;\r\n\t\t\t\tclosePopup(confirmDeletePopup);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n});\r\n\r\nexport function onDelete(cardId, cardElement) {\r\n\tcurrentCardToDelete = {cardId, cardElement};\r\n\topenPopup(confirmDeletePopup);\r\n}\r\n\r\nexport function onLike(cardId, buttonElement, likeCount) {\r\n\tif (buttonElement.classList.contains('card__like-button_is-active')) {\r\n\t\tdeleteLike(cardId)\r\n\t\t\t.then((card) => {\r\n\t\t\t\tbuttonElement.classList.remove('card__like-button_is-active');\r\n\t\t\t\tlikeCount.textContent = card.likes.length;\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error('Error:', err);\r\n\t\t\t});\r\n\t} else {\r\n\t\taddLike(cardId)\r\n\t\t\t.then((card) => {\r\n\t\t\t\tbuttonElement.classList.add('card__like-button_is-active');\r\n\t\t\t\tlikeCount.textContent = card.likes.length;\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error('Error:', err);\r\n\t\t\t});\r\n\t}\r\n}\r\n\r\nfunction isLiked(cardElement, buttonElement, userId) {\r\n\tif (cardElement.likes.some((user) => user._id === userId)) {\r\n\t\tbuttonElement.classList.add('card__like-button_is-active');\r\n\t}\r\n}\r\n","function showInputError(formElement, inputElement, errorMessage, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n  errorElement.textContent = errorMessage;\r\n}\r\n\r\nfunction hideInputError(formElement, inputElement, validationConfig) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n}\r\n\r\nfunction isValid(formElement, inputElement, validationConfig) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    // данные атрибута доступны у элемента инпута через ключевое слово dataset.\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n}\r\n\r\nfunction setEventListeners(formElement, validationConfig){\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      isValid(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\nexport function enableValidation(validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n    // Переключаем состояние кнопки при инициализации формы\r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n}\r\n\r\nexport function clearValidation(formElements, validationConfig) {\r\n  formElements.forEach((formElement) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputList.forEach((inputElement) => {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig)\r\n    });\r\n  });\r\n}\r\n","import './pages/index.css';\r\nimport { createCard, onDelete, onLike } from './components/card';\r\nimport { openPopup, closePopup } from './components/modal';\r\nimport { clearValidation, enableValidation } from './components/validation'\r\nimport { addNewCard, getInitialCards, getProfileInfo, updateAvatar, updateProfileInfo } from './api';\r\n\r\n// Список карточек\r\nconst cardsList = document.querySelector('.places__list');\r\n\r\n// Общие селекторы\r\nconst popups = document.querySelectorAll('.popup');\r\n\r\n// Редактирование профиля\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst profileFormWrap = document.querySelector('.popup_type_edit');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst profileForm = document.forms['edit-profile'];\r\nconst nameInput = profileForm.querySelector('.popup__input_type_name');\r\nconst jobInput = profileForm.querySelector('.popup__input_type_description');\r\nconst avatarForm = document.forms['update-avatar'];\r\nconst avatarInput = avatarForm.querySelector('.popup__input_type_avatar');\r\nconst updateAvatarPopupWrapper = document.querySelector('.popup_type_update-avatar');\r\n\r\n// Добавление карточки\r\nconst addCardButton = document.querySelector('.profile__add-button');\r\nconst cardFormWrap = document.querySelector('.popup_type_new-card');\r\nconst cardForm = document.forms['new-place'];\r\nconst cardNameInput = cardForm.querySelector('.popup__input_type_card-name');\r\nconst cardUrlInput = cardForm.querySelector('.popup__input_type_url');\r\n\r\n// Открытие попапа с картинкой\r\nconst fullCardPopup = document.querySelector('.popup_type_image');\r\nconst fullCardImage = fullCardPopup.querySelector('.popup__image');\r\nconst fullCardCaption = fullCardPopup.querySelector('.popup__caption');\r\n\r\nconst formElements = [cardForm, profileForm, avatarForm];\r\n\r\nconst validationConfig = {\r\n\tformSelector: '.popup__form',\r\n\tinputSelector: '.popup__input',\r\n\tsubmitButtonSelector: '.popup__button',\r\n\tinactiveButtonClass: 'popup__button_disabled',\r\n\tinputErrorClass: 'popup__input_type_error',\r\n\terrorClass: 'popup__error_visible'\r\n};\r\n\r\nlet userId = null;\r\n\r\n// Добавление карточки на страницу\r\nfunction addCard(cardData) {\r\n\t// Создаем карточку с использованием полученных параметров и других функций\r\n\tconst cardElement = createCard({\r\n\t\tcardData,\r\n\t\tuserId,\r\n\t\tonLike,\r\n\t\tonDelete,\r\n\t\topenFullCardPopup\r\n\t});\r\n\r\n\tcardsList.append(cardElement);\r\n}\r\n\r\nPromise.all([getInitialCards(), getProfileInfo()])\r\n\t.then(([cards, profileInfo]) => {\r\n\t\t// Инициализация данных\r\n\t\tprofileTitle.textContent = profileInfo.name;\r\n\t\tprofileDescription.textContent = profileInfo.about;\r\n\t\tprofileImage.style.backgroundImage = `url(${profileInfo.avatar})`;\r\n\t\tuserId = profileInfo._id;\r\n\r\n\t\tcards.forEach((card) => {\r\n\t\t\taddCard(card);\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\tconsole.log('Error: ', err);\r\n\t})\r\n\r\n// Открытие карточки\r\nfunction openFullCardPopup(name, link) {\r\n\tfullCardImage.src = link;\r\n\tfullCardImage.alt = name;\r\n\tfullCardCaption.textContent = name;\r\n\topenPopup(fullCardPopup);\r\n}\r\n\r\n// Кнопка редактирования профиля\r\neditButton.addEventListener('click', () => {\r\n\topenPopup(profileFormWrap);\r\n\r\n\tconst currentName = profileTitle.textContent;\r\n\tconst currentJob = profileDescription.textContent;\r\n\r\n\tnameInput.value = currentName;\r\n\tjobInput.value = currentJob;\r\n});\r\n\r\nprofileImage.addEventListener('click', () => {\r\n\topenPopup(updateAvatarPopupWrapper)\r\n});\r\n\r\n// Кнопка добавления карточки\r\naddCardButton.addEventListener('click', () => {\r\n\topenPopup(cardFormWrap);\r\n});\r\n\r\n// Закрытие попапов. Находим все попапы и пробегаемся по ним, навешивая обработчик\r\npopups.forEach((popup) => {\r\n\tpopup.addEventListener('mousedown', (evt) => {\r\n\t\tif (evt.target.classList.contains('popup_is-opened') || (evt.target.classList.contains('popup__close'))) {\r\n\t\t\tclosePopup(popup);\r\n\t\t\tclearValidation(formElements, validationConfig);\r\n\t\t\tcardForm.reset();\r\n\t\t}\r\n\t});\r\n});\r\n\r\n// Форма редактирования профиля\r\nfunction handleProfileFormSubmit(evt) {\r\n\tevt.preventDefault();\r\n\tconst popupButton = evt.target.querySelector('.popup__button');\r\n\tpopupButton.textContent = 'Сохранение...';\r\n\r\n\t// Получаем текущие значения\r\n\tconst nameValue = nameInput.value;\r\n\tconst jobValue = jobInput.value;\r\n\r\n\tupdateProfileInfo(nameValue, jobValue)\r\n\t\t.then(() => {\r\n\t\t\t// Устанавливаем текущие значения\r\n\t\t\tprofileTitle.textContent = nameValue;\r\n\t\t\tprofileDescription.textContent = jobValue;\r\n\t\t\tpopupButton.textContent = 'Сохранить';\r\n\t\t\tclosePopup(profileFormWrap);\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err)\r\n\t\t\tpopupButton.textContent = 'Сохранить';\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tpopupButton.textContent = 'Сохранить';\r\n\t\t})\r\n}\r\nprofileForm.addEventListener('submit', handleProfileFormSubmit);\r\n\r\n// Форма добавления карточки на страницу\r\nfunction handleCardFormSubmit(evt) {\r\n\tevt.preventDefault();\r\n\tconst popupButton = evt.target.querySelector('.popup__button');\r\n\tpopupButton.textContent = 'Сохранение...';\r\n\r\n\tconst nameValue = cardNameInput.value;\r\n\tconst urlValue = cardUrlInput.value;\r\n\r\n\taddNewCard(nameValue, urlValue)\r\n\t\t.then((cardData) => {\r\n\t\t\tconst card = createCard({\r\n\t\t\t\tcardData,\r\n\t\t\t\tuserId,\r\n\t\t\t\tonLike,\r\n\t\t\t\tonDelete,\r\n\t\t\t\topenFullCardPopup\r\n\t\t\t});\r\n\t\t\tcardsList.prepend(card);\r\n\t\t\tpopupButton.textContent = 'Создать';\r\n\t\t\tcardForm.reset();\r\n\t\t\tclosePopup(cardFormWrap);\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err)\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tpopupButton.textContent = 'Создать';\r\n\t\t})\r\n}\r\ncardForm.addEventListener('submit', handleCardFormSubmit);\r\n\r\n// Обновление аватара\r\nfunction handleUpdateAvatarFormSubmit(evt) {\r\n\tevt.preventDefault();\r\n\tconst popupButton = evt.target.querySelector('.popup__button');\r\n\tpopupButton.textContent = 'Сохранение...';\r\n\tconst avatarUrl = avatarInput.value;\r\n\r\n\tupdateAvatar(avatarUrl)\r\n\t\t.then((user) => {\r\n\t\t\tprofileImage.style.backgroundImage = `url('${user.avatar}')`;\r\n\t\t\tpopupButton.textContent = 'Сохранить';\r\n\t\t\tavatarForm.reset();\r\n\t\t\tclosePopup(updateAvatarPopupWrapper);\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tpopupButton.textContent = 'Сохранить';\r\n\t\t})\r\n}\r\navatarForm.addEventListener('submit', handleUpdateAvatarFormSubmit);\r\n\r\nenableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","handleRequest","res","ok","json","Promise","reject","concat","status","openPopup","popup","classList","add","document","addEventListener","keyHandler","closePopup","remove","removeEventListener","evt","key","querySelector","confirmDeletePopup","confirmDeleteButton","currentCardToDelete","createCard","cardParameters","cardData","userId","onLike","onDelete","openFullCardPopup","cardElement","content","cloneNode","deleteButton","cardImage","likeButton","likeCount","textContent","name","src","link","alt","likes","length","owner","_id","buttonElement","some","user","isLiked","cardId","contains","fetch","method","then","catch","err","console","log","deleteLike","card","error","addLike","hideInputError","formElement","inputElement","validationConfig","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","cardsList","popups","querySelectorAll","editButton","profileFormWrap","profileTitle","profileDescription","profileImage","profileForm","forms","nameInput","jobInput","avatarForm","avatarInput","updateAvatarPopupWrapper","addCardButton","cardFormWrap","cardForm","cardNameInput","cardUrlInput","fullCardPopup","fullCardImage","fullCardCaption","formElements","formSelector","inputSelector","submitButtonSelector","all","_ref","_ref2","cards","profileInfo","about","style","backgroundImage","avatar","forEach","append","currentName","currentJob","value","target","Array","from","clearValidation","reset","preventDefault","popupButton","nameValue","jobValue","body","JSON","stringify","finally","prepend","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation"],"sourceRoot":""}